1.
با استفاده از دستور زیر ابتدا فایل شامل کد ترجمه شده به اسمبلی را تولید می‌کنیم.
gcc -m64 -S -o recurse.S recurse.c
سپس با مشاهده‌ی دستورات اسمبلی متوجه می‌شویم که فراخوانی بازگشتی تابع recur در دستورالعمل‌های اسمبلی زیر اتفاق می‌افتد:
	movl	-20(%rbp), %eax
	subl	$1, %eax
	movl	%eax, %edi
	call	recur
2.
با دستور زیر می‌توانیم محتوای بخش .text را ببینیم:
objdump map.obj -S -j .text
(آرگومان -S برای انتخاب سورس‌کد و disassemble کردن آن است. آرگومان -j برای مشخص کردن بخش مورد نظر.)
مشاهده می‌شود که محتویات این بخش شامل کد برنامه است.

دستور مشابه را برای مشاهده‌ی .data استفاده می‌کنیم:
objdump map.obj -S -j .data
این بخش شامل متغیرها، جداول و دیتاهای برنامه است.

3.
با استفاده از دستور زیر Symbol Table را چاپ می‌کنیم:
objdump -t map.obj
که در این‌جا چنین است:
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 map.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .note.gnu.property	0000000000000000 .note.gnu.property
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000004       O *COM*	0000000000000004 foo
0000000000000000 g     O .data	0000000000000004 stuff
0000000000000000 g     F .text	0000000000000047 main
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 malloc
0000000000000000         *UND*	0000000000000000 recur

4.
پرچم g مخفف global است و به‌معنای گلوبال بودن سیمبل مربوط است.
پرچم O مخفف Object است و به‌معنای آن است که سیمبل مربوط در کد یک آبجکت است.
پرچم *UND* به‌معنای رفرنس خارج از کد است. (برای مثال recur)

5.
دستور زیر علاوه‌بر Symbol Table جدول دیگری را به‌نام Dynamic Symbol Table نمایش می‌دهد:
objdump -tT map.obj
می‌توان به‌جای -T از --dynamic-syms نیز استفاده کرد.
دقت کنید چون در جدول نماد این فایل، جلوی malloc نماد UND قرار دارد، بنابراین در فایلی که این تابع پیاده‌سازی شده، نماد این تابع وجود دارد.


6.
در هر دو فایل recurse.obj و map.obj نماد recur وجود دارد زیرا نام این تابع آورده شده‌است.
جدول نمادهای این دو فایل را ذکر می‌کنیم:

recurse.obj:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 recurse.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .note.gnu.property	0000000000000000 .note.gnu.property
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 g     F .text	0000000000000047 recur
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 printf

map.obj:     file format elf64-x86-64

objdump: map.obj: not a dynamic object
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 map.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .note.gnu.property	0000000000000000 .note.gnu.property
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000004       O *COM*	0000000000000004 foo
0000000000000000 g     O .data	0000000000000004 stuff
0000000000000000 g     F .text	0000000000000047 main
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 malloc
0000000000000000         *UND*	0000000000000000 recur


7.
دستور زیر را ابتدا اجرا می‌کنیم:
objdump -t map
چون هر دو فایل با یک‌دیگر لینک شد‌ه‌اند، نمادهای بسیار بیشتری نسبت به حالت قبلی موجود است.
همچنین نماد recur در جدول نماد map.obj به‌عنوان نماد external بود که به ‌دلیل پیوند این دو فایل، اکنون global است.

