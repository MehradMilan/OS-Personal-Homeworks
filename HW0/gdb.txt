GDB Practice:

آ.
gdb map

ب.
b main //BreakPoint 1

ج.
r
(به‌طور مشابه می‌توان از دستور start به‌جای دستورات بخش ب و ج استفاده کرد.)

د.
از دستور زیر استفاده می‌کنیم تا آدرس خانه‌ی argv را به‌دست آوریم.
print argv
که خروجی این دستور آدرس زیر است:
0x7ffff7fa62e8
که یعنی به فایل در حال اجرا اشاره می‌کند.

ه.
از دستور زیر استفاده می‌کنیم:
print *argv
که محتوای این خانه از حافظه را چاپ کند. که مقدار زیر است:
0x7fffffffe715 "/home/vagrant/code/personal/HW0/map"

و.
b recur //BreakPoint 2
c

ز.
p recur
این دستور آدرس تابع recur در حافظه را نشان می‌دهد. که در این‌جا خروجی برابر است با:
0x5555555551b0

ح.
c

ط.
b recurse.c:8 //BreakPoint 3
continue

ی.
layout asm

ک.
b *0x5555555551e9 //BreakPoint 4
continue

ل.
با استفاده از دستور زیر، مقادیر تمام رجیسترها را چاپ می‌کنیم:
layout regs
که مقادیر چاپ شده این‌گونه هستند:
rax            0x2                 2                                 
rbx            0x555555555200      93824992236032                    
rcx            0x0                 0                          
rdx            0x0                 0                       
rsi            0x555555559380      93824992252800          
rdi            0x2                 2                          
rbp            0x7fffffffdd60      0x7fffffffdd60          
rsp            0x7fffffffdd38      0x7fffffffdd38          
r8             0x0                 0                          
r9             0x2                 2                       
r10            0x555555556006      93824992239622          
r11            0x246               582                        
r12            0x555555555080      93824992235648          
r13            0x7fffffffde90      140737488346768         
r14            0x0                 0                          
r15            0x0                 0                       
rip            0x5555555551b0      0x5555555551b0 <recur>  
eflags         0x202               [ IF ]                     
cs             0x33                51                      
ss             0x2b                43                      
ds             0x0                 0                          
es             0x0                 0                                 
fs             0x0                 0                                 
gs             0x0                 0 
البته می‌توان با دستور info registers نیز مقادیر ثبات‌ها را چاپ کرد.

م.
step

ن.
layout src

س.
backtrace

ع.
b recur if i == 0 //BreakPoint 5
delete 2


ف.
c 4

ص.
backtrace

ق.
up 3
p argc
با استفاده از این دستور مشاهده می‌شود مقدار ۱ در این متغیر قرار دارد.

ر.
b +1 //BreakPoint 6
delete 3
delete 4

ش.
layout asm

ت.
با توجه به دستور اسمبلی بعدی که می‌خواهد اجرا شود، چون روی دستور return 0 قرار داریم، می‌توان متوجه شد دستور معادل return 0 در زبان C این است:
mov $0x0, %eax
leaveq

ث.
layout src

خ.
n 3

ذ.
c

ض.
q
